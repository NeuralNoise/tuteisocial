Installation
================

1. Copy tuteisocial into 'extension' folder

2.  Run the mysql scipts:

* extension/tuteisocial/sql/mysql/schema.sql

* extension/tuteisocial/sql/common/democontent.sql

3.  Activate tuteisocial 

In administrator user interface, click 'setup' tab->'extensions' menu, select 'tuteisocial', click button 'Apply Changes'.

or in settings/override/site.ini.append.php, add acivation configuration under "ExtensionSettings" section:

[ExtensionSettings]

ActiveExtensions[]=tuteisocial 

4. Regenerate autoloads

In administrator user interface, click 'setup' tab->'extensions' menu, click button 'Regenerate autoload arrays for extensions',

or in eZ Publish installation folder, run "php bin/php/ezpgenerateautoloads.php -e"

5. Clear cache

Clear INI and template caches. (from admin 'Setup' tab or commandline) 

6. Add 'Relationship' datatype to 'User' content class.

In administrator user interface, click 'setup' tab->'Classes'. Select 'Users' in the class group list. Click the edit button. 

In the user class. Add the 'Relationship' attribute, choose a name for it, also add 'User exp' attribute.

Also check "Container" option of the User class, so it will be possible to create objects inside the user account node. 

7. Add tuteisocial_classes-1.3-1.ezpkg package: 'Setup'->'Packages'->'Import new package'. Upload all tuteisocial packages ( extension/tuteisocial/packages/* ). 

8. Change your override settings, copy the contents of the following file: extension/tuteisocial/settings/override.ini.append.php-RECOMMENDED.
Paste to the beggining of the file: settings/siteaccess/[front-end-siteaccess]/override.ini.append.php

9. Create the CreateUserExtras workflow: 'Workflows'->'Standard'->'New workflow'->'Create UserExtras' ( name Create UserExtras ).

10. Setup CreateUserExtras trigger: 'Triggers'-> 'content-publish-after' ( choose CreateUserExtras ). Apply changes. Now the system will create user subnodes after the publication of the user object.

 

11. Change member user permissions (User->Roles and policies): 
Module 	View 	Permission
Content 	Create 	Class( Blog post ) , ParentOwner( Self ) , ParentClass( Blog )
Content 	Create 	Class( Panda3d ) , ParentOwner( Self ) , ParentClass( Panda3d Folder )
Content 	Create 	Class( Shiva3d ) , ParentOwner( Self ) , ParentClass( Shiva3d Folder )
Content 	Create 	Class( Event ) , ParentOwner( Self ) , ParentClass( Event calendar )
Content 	Create 	Class( Image ) , ParentOwner( Self ) , ParentClass( Gallery )
Content 	Create 	Class( Unity ) , ParentOwner( Self ) , ParentClass( Unity Folder )
Content 	Create 	Class( Image ) , ParentOwner( Self ) , ParentClass( Gallery )
Content 	Create 	Class( Obj ) , ParentOwner( Self ) , ParentClass( Obj Folder )
Content 	Create 	Class( Flash ) , ParentOwner( Self ) , ParentClass( Flash Folder )
Ezoe 	Editor 	No limitations
Content 	Remove 	Class( Blog post , Image , Event , Unity , Obj, Shiva3d, Panda3d, Flash ) , Owner( Self )
Content 	Edit 	Class( Comment , Blog post , Image , Forum topic , Forum reply , Event , Unity , Obj, Shiva3d, Panda3d, Flash ) , Section( Standard , Users ) , Owner( Self )
Content 	Read 	Subtree( Members ) *

 *Could be given to anonymous user. 

12. If your site already has registered members, open the command line, go to eZ Publish installation folder, run "php extension/tuteisocial/bin/php/userextras.php", so it will create all user extras objects. 

13. Create a link content object in the site root node and link it to users/members node.

If you are using virtual hosts please change your .htaccess and include this line to allow model viewer file access:

RewriteRule ^extension/tuteisocial/design/ezflow/unity/objViewer.unity3d - [L]

Change your main design settings to tutei.

